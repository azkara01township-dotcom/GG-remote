-- file: login_combined_fixed.lua
local passFile           = "/sdcard/.ulog_craft"
local expiredDevicesFile = "/sdcard/.vutlenot"

-- 🔑 Expired code global
local expiredCode   = "ARHPremiumTS-2025"
local expireDate50  = "2025-09-25"

-- Hash helper
local function hash(str)
    local h = 0
    for i = 1, #str do
        h = (h * 31 + str:byte(i)) % 1000000007
    end
    return tostring(h)
end

-- Device ID deterministik
local function getDeviceID()
    local info = gg.getTargetInfo() or {}
    local label = info.label or "unknownLabel"
    local vcode = info.versionCode or "0"
    local hostname = os.getenv("HOSTNAME") or "unknownHost"
    local file = gg.getFile() or "unknownFile"
    return label .. "-" .. tostring(vcode) .. "-" .. hostname .. "-" .. file
end

-- Permanent code per device
local function generatePermanentCode()
    local seed = getDeviceID()
    local h = tonumber(hash(seed)) or 0
    local num = h % 1000000
    return "ARHPremium-" .. string.format("%06d", num)
end

-- Check expired date
local function isExpiredDate50()
    local today = os.date("%Y-%m-%d")
    return today > expireDate50
end

-- Hitung sisa hari
local function getDaysLeft(expDate)
    local y, m, d = expDate:match("(%d+)-(%d+)-(%d+)")
    local target = os.time{year=tonumber(y), month=tonumber(m), day=tonumber(d), hour=23, min=59, sec=59}
    local now = os.time()
    local diff = math.floor((target - now) / 86400)
    if diff < 0 then diff = 0 end
    return diff
end

-- Ambil / generate permanent code
local permanentCode = generatePermanentCode()
local expectedHash = hash(permanentCode)

-- Load permanent devices
local permanentDevices = {}
local pf = io.open(passFile, "r")
if pf then
    for line in pf:lines() do
        permanentDevices[#permanentDevices + 1] = line
    end
    pf:close()
end

local function isPermanentDeviceRegistered(idHash)
    for _, h in ipairs(permanentDevices) do
        if h == idHash then return true end
    end
    return false
end

-- Load expired devices (per device hash)
local expiredDevices = {}
local ef = io.open(expiredDevicesFile, "r")
if ef then
    for line in ef:lines() do
        expiredDevices[#expiredDevices+1] = line
    end
    ef:close()
end

local function isExpiredDeviceRegistered(idHash)
    for _, d in ipairs(expiredDevices) do
        if d == idHash then return true end
    end
    return false
end

-- Alert info login
local function showLoginInfo(mode)
    local now = os.date("%Y-%m-%d %H:%M:%S")
    if mode == "Permanent Code" then
        gg.alert(string.format("✅ Permanent Login Success\n\n📅 Login: %s\n🔑 Type: %s", now, mode))
    elseif mode == "Expired Code" then
        local daysLeft = getDaysLeft(expireDate50)
        local leftText = (daysLeft == 1) and "1 day left" or (daysLeft .. " days left")
        gg.alert(string.format("✅ Expired Login Success\n\n📅 Login: %s\n⏳ Expire Date: %s\n⏳ %s\n🔑 Type: %s", now, expireDate50, leftText, mode))
    end
end

-- 🔐 Login logic
local loginOK = false

-- ✅ Auto-login permanent code
if isPermanentDeviceRegistered(expectedHash) then
    gg.toast("✅ Auto-login success (Permanent Code)")
    loginOK = true
end

-- ✅ Auto-login expired code
if not loginOK then
    local deviceHash = hash(getDeviceID())
    if isExpiredDeviceRegistered(deviceHash) then
        if isExpiredDate50() then
            gg.alert("⛔ Expired code expired on " .. expireDate50 .. "\n\nPlease use a Permanent Code to continue.")
        else
            gg.toast("✅ Auto-login success (Expired Code)")
            loginOK = true
        end
    end
end

-- Manual input jika belum login
while not loginOK do
    local input = gg.prompt({"🔐 Enter Code"}, {""}, {"text"})
    if not input then gg.alert("❌ Cancelled") os.exit() end
    local code = input[1]:gsub("%s+", ""):upper()  -- hapus spasi & case-insensitive

    -- cek permanent code
    if code == permanentCode:upper() then
        if not isPermanentDeviceRegistered(expectedHash) then
            local pfw = io.open(passFile, "a")
            if pfw then pfw:write(expectedHash .. "\n") pfw:close() end
            permanentDevices[#permanentDevices + 1] = expectedHash
        end
        gg.toast("✅ Access granted with Permanent Code")
        showLoginInfo("Permanent Code")
        loginOK = true

    -- cek expired code per device
    elseif code == expiredCode:upper() then
        local deviceHash = hash(getDeviceID())
        if isExpiredDate50() then
            gg.alert("⛔ Expired code expired on " .. expireDate50 .. "\n\nPlease use a Permanent Code to continue.")
        else
            if not isExpiredDeviceRegistered(deviceHash) then
                local efw = io.open(expiredDevicesFile, "a")
                if efw then efw:write(deviceHash .. "\n") efw:close() end
                expiredDevices[#expiredDevices+1] = deviceHash
            end
            gg.toast("✅ Access granted with Expired Code")
            showLoginInfo("Expired Code")
            loginOK = true
        end

    else
        gg.alert("❌ Invalid code, please try again")
    end
end

-- lanjutkan eksekusi script
